!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("rxjs"),require("angular2-hotkeys"),require("angular2-hotkeys/src/hotkeys.service"),require("contexr/lib/providers/contexr.service"),require("@angular/common")):"function"==typeof define&&define.amd?define("contexr",["exports","@angular/core","rxjs","angular2-hotkeys","angular2-hotkeys/src/hotkeys.service","contexr/lib/providers/contexr.service","@angular/common"],e):e(t.contexr={},t.ng.core,t.rxjs,null,null,null,t.ng.common)}(this,function(t,e,n,o,r,c,i){"use strict";var s=function(t,e){return(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};var u=function d(){},a=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return function o(t,e){function n(){this.constructor=t}s(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}(e,t),e}(u),p=function(){function t(t){this.hotkeysService=t,this.context=[],this.currentContext=[],this.contextStateSubject=new n.Subject,this.contextStateObservable=this.contextStateSubject.asObservable()}return t.prototype.reset=function(){this.currentContext=[]},t.prototype.addCurrentContext=function(t,e){this.addItemsInContext(this.context,t,e)},t.prototype.registerContextMenuItem=function(e){this.context.push(e),e.hotkey&&e.hotkey&&this.hotkeysService.add(new o.Hotkey(e.hotkey,function(t){return e.action(),!1}))},t.prototype.registerContextMenuItems=function(t){for(var e=0;e<t.length;e++)this.registerContextMenuItem(t[e])},t.prototype.getContextState=function(){return this.contextStateObservable},t.prototype.open=function(t){this.addItemsInContext(this.context,"all",null),this.contextStateSubject.next({open:!0,context:this.currentContext,top:t.clientY,left:t.clientX})},t.prototype.addItemsInContext=function(t,e,n){for(var o=0;o<t.length;o++)if(t[o].action){var r=Object.assign({},t[o]);null!==n&&(r.args=n),-1!==r.context.indexOf(e)&&this.currentContext.push(r)}else if(t[o].children){var c=Object.assign({},t[o]);this.addItemsInContext(t[o].children,e,n),0<c.children.length&&this.currentContext.push(c)}},t.prototype.close=function(){this.contextStateSubject.next({open:!1})},t.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:o.HotkeysService}]},t.ngInjectableDef=e.defineInjectable({factory:function(){return new t(e.inject(r.HotkeysService))},token:t,providedIn:"root"}),t}(),l=function(){function t(t){var e=this;this.contexr=t,this.open=!1,document.addEventListener("contextmenu",function(t){t.preventDefault(),console.log("Reset context menu and prevent default"),e.contexr.reset()},!0)}return t.prototype.onDocumentClick=function(){this.contexr.close()},t.prototype.onContextMenu=function(t){t.stopPropagation()},t.prototype.onClick=function(t){t.stopPropagation()},t.prototype.onDocumentContextMenu=function(t){console.log("Open context menu"),this.contexr.open(t)},t.prototype.ngOnInit=function(){var e=this;this.contextStateSub=this.contexr.getContextState().subscribe(function(t){e.contextState=t,e.open=!!e.contextState.context})},t.prototype.ngOnDestroy=function(){this.contextStateSub.unsubscribe()},t.prototype.isAction=function(t){return!!t.action},t.decorators=[{type:e.Component,args:[{selector:"ctx-context-menu",template:'<div\n  (contextmenu)="onContextMenu($event)"\n  (click)="onClick($event)"\n  *ngIf="open"\n  class="context-menu menu"\n  [ngStyle]="{\'top.px\': contextState.top, \'left.px\': contextState.left}"\n>\n  <ul class="context-list">\n    <ng-container *ngFor="let item of contextState.context">\n      <ctx-context-menu-item *ngIf="isAction(item)" [item]="item"></ctx-context-menu-item>\n      <ctx-submenu *ngIf="!isAction(item)" [item]="item"></ctx-submenu>\n    </ng-container>\n  </ul>\n</div>\n',styles:[".context-menu{position:absolute}::ng-deep .menu{background:#fff;border:1px solid #a7a7a7;box-shadow:0 0 10px 0 rgba(0,0,0,.5)}::ng-deep .menu .context-list{margin:0;padding:0}::ng-deep .menu .context-list .context-list-item{list-style:none;padding:5px 7px;min-width:200px;cursor:pointer}::ng-deep .menu .context-list .context-list-item .flex-container{display:flex}::ng-deep .menu .context-list .context-list-item .shortcut{font-size:.8em;opacity:.5;margin-left:10px;margin-top:2px}::ng-deep .menu .context-list .context-list-item .submenu{display:none;position:absolute;margin-top:-20px}::ng-deep .menu .context-list .context-list-item:hover{background:rgba(0,0,0,.1)}::ng-deep .menu .context-list .context-list-item:hover>.submenu{display:block}"]}]}],t.ctorParameters=function(){return[{type:p}]},t.propDecorators={onDocumentClick:[{type:e.HostListener,args:["document:click"]}],onDocumentContextMenu:[{type:e.HostListener,args:["document:contextmenu",["$event"]]}]},t}(),x=function(){function t(t){this.element=t,this.subMenuStyle={}}return t.prototype.ngOnChanges=function(){var t=this.element.nativeElement.getBoundingClientRect();this.subMenuStyle={left:"214px",top:t.offsetHeight+"px"}},t.prototype.isAction=function(t){return!!t.action},t.decorators=[{type:e.Component,args:[{selector:"ctx-submenu",template:'<li class="context-list-item">\n  <div class="flex-container">\n    <span class="context">{{item.text}}</span>\n    <span style="flex: 1 1 auto;"></span>\n    <span class="shortcut">>>></span>\n  </div>\n  <ul class="context-list submenu menu" [ngStyle]="subMenuStyle">\n    <ng-container *ngFor="let subItem of item.children">\n      <ctx-context-menu-item *ngIf="isAction(subItem)" [item]="subItem"></ctx-context-menu-item>\n      <ctx-submenu *ngIf="!isAction(subItem)" [item]="subItem"></ctx-submenu>\n    </ng-container>\n  </ul>\n</li>\n',styles:[""]}]}],t.ctorParameters=function(){return[{type:e.ElementRef}]},t.propDecorators={item:[{type:e.Input}]},t}(),m=function(){function t(t){this.contexr=t}return t.prototype.ngOnInit=function(){},t.prototype.act=function(){console.log(this.item),this.item.action(this.item.args),this.contexr.close()},t.decorators=[{type:e.Component,args:[{selector:"ctx-context-menu-item",template:'<li (click)="act()" class="context-list-item">\n  <div class="flex-container">\n    <span class="context">{{item.text}}</span>\n    <span style="flex: 1 1 auto;"></span>\n    <span class="shortcut">{{item.hotkey}}</span>\n  </div>\n</li>\n',styles:[""]}]}],t.ctorParameters=function(){return[{type:p}]},t.propDecorators={item:[{type:e.Input}]},t}(),f=function(){function t(t){this.contexr=t}return t.prototype.onContextMenu=function(t){console.log("Adding context: "+this.ctx+" with args: "+this.ctxArgs),this.contexr.addCurrentContext(this.ctx,this.ctxArgs)},t.decorators=[{type:e.Directive,args:[{selector:"[ctx]"}]}],t.ctorParameters=function(){return[{type:c.ContexrService}]},t.propDecorators={ctx:[{type:e.Input,args:["ctx"]}],ctxArgs:[{type:e.Input,args:["ctxArgs"]}],onContextMenu:[{type:e.HostListener,args:["contextmenu",["$event"]]}]},t}(),g=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{imports:[i.CommonModule,o.HotkeyModule.forRoot()],declarations:[l,x,m,f],exports:[l,f],providers:[p]}]}],t}();t.ContextMenuItem=a,t.ContextMenuComponent=l,t.ContexrModule=g,t.ɵd=m,t.ɵc=x,t.ɵe=f,t.ɵb=p,t.ɵa=u,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=contexr.umd.min.js.map