{"version":3,"file":"contexr.js.map","sources":["ng://contexr/lib/types/context-menu-entry.ts","ng://contexr/lib/types/context-menu-item.ts","ng://contexr/lib/providers/contexr.service.ts","ng://contexr/lib/components/context-menu/context-menu.component.ts","ng://contexr/lib/components/submenu/submenu.component.ts","ng://contexr/lib/components/context-menu-item/context-menu-item.component.ts","ng://contexr/lib/directives/context.directive.ts","ng://contexr/lib/contexr.module.ts"],"sourcesContent":["export class ContextMenuEntry {\r\n  text: string;\r\n}\r\n","import {ContextMenuEntry} from './context-menu-entry';\r\n\r\nexport class ContextMenuItem extends ContextMenuEntry {\r\n  context: string[];\r\n  action: (args: any) => void;\r\n  hotkey?: string | string[];\r\n  args?: any;\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {ContextState} from '../types/context-state';\r\nimport {ContextMenuItem} from '../types/context-menu-item';\r\nimport {Hotkey, HotkeysService} from 'angular2-hotkeys';\r\nimport {ContextMenuEntry} from '../types/context-menu-entry';\r\nimport {Submenu} from '../types/submenu';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContexrService {\r\n\r\n  private context: ContextMenuEntry[] = [];\r\n  private currentContext: ContextMenuEntry[] = [];\r\n\r\n  private contextStateSubject: Subject<ContextState> = new Subject<ContextState>();\r\n  private contextStateObservable: Observable<ContextState> = this.contextStateSubject.asObservable();\r\n\r\n  constructor(private hotkeysService: HotkeysService) { }\r\n\r\n  /**\r\n   * Reset the current context\r\n   */\r\n  public reset() {\r\n    this.currentContext = [];\r\n  }\r\n\r\n  /**\r\n   * Add a context\r\n   * @param context\r\n   * @param arguments\r\n   */\r\n  public addCurrentContext(context: string, args: any) {\r\n    this.addItemsInContext(this.context, context, args);\r\n  }\r\n\r\n  /**\r\n   * Register a context menu person to show up at some context\r\n   * @param context\r\n   */\r\n  public registerContextMenuItem(context: ContextMenuEntry): void {\r\n    this.context.push(context);\r\n    if ((context as any).hotkey &&  (context as any).hotkey) {\r\n      this.hotkeysService.add(new Hotkey((context as any).hotkey, (event: KeyboardEvent): boolean => {\r\n        (context as any).action();\r\n        return false;\r\n      }));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register an array of context menu items\r\n   * @param context\r\n   */\r\n  public registerContextMenuItems(context: ContextMenuEntry[]): void {\r\n    for (let i = 0; i < context.length; i++) {\r\n      this.registerContextMenuItem(context[i]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the state of the context menu\r\n   * @returns\r\n   */\r\n  public getContextState(): Observable<ContextState> {\r\n    return this.contextStateObservable;\r\n  }\r\n\r\n  /**\r\n   * Open the context menu\r\n   */\r\n  public open(event: MouseEvent): void {\r\n    this.addItemsInContext(this.context, 'all', null);\r\n    this.contextStateSubject.next({\r\n      open: true,\r\n      context: this.currentContext,\r\n      top: event.clientY,\r\n      left: event.clientX\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Filter all context items with our context string\r\n   * @param items\r\n   * @param context\r\n   * @returns\r\n   */\r\n  private addItemsInContext(items: ContextMenuEntry[], context: string, args: any) {\r\n    for (let i = 0; i < items.length; i++) {\r\n      if ((items[i] as ContextMenuItem).action) {\r\n        const action = Object.assign({}, items[i]) as ContextMenuItem;\r\n        if (args !== null) {\r\n          action.args = args;\r\n        }\r\n        if (action.context.indexOf(context) !== -1) {\r\n          this.currentContext.push(action);\r\n        }\r\n      } else if ((items[i] as Submenu).children) {\r\n        const submenu = Object.assign({}, items[i]) as Submenu;\r\n        this.addItemsInContext(\r\n          (items[i] as Submenu).children,\r\n          context,\r\n          args\r\n        );\r\n        if (submenu.children.length > 0) {\r\n          this.currentContext.push(submenu);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Close the context menu\r\n   */\r\n  public close(): void {\r\n    this.contextStateSubject.next({\r\n      open: false\r\n    });\r\n  }\r\n}\r\n","import {Component, HostListener, OnDestroy, OnInit} from '@angular/core';\r\nimport {ContextState} from '../../types/context-state';\r\nimport {ContexrService} from '../../providers/contexr.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {ContextMenuItem} from '../../types/context-menu-item';\r\nimport {ContextMenuEntry} from '../../types/context-menu-entry';\r\n\r\n@Component({\r\n  selector: 'ctx-context-menu',\r\n  template: `<div\n  (contextmenu)=\"onContextMenu($event)\"\n  (click)=\"onClick($event)\"\n  *ngIf=\"open\"\n  class=\"context-menu menu\"\n  [ngStyle]=\"{'top.px': contextState.top, 'left.px': contextState.left}\"\n>\n  <ul class=\"context-list\">\n    <ng-container *ngFor=\"let item of contextState.context\">\n      <ctx-context-menu-item *ngIf=\"isAction(item)\" [item]=\"item\"></ctx-context-menu-item>\n      <ctx-submenu *ngIf=\"!isAction(item)\" [item]=\"item\"></ctx-submenu>\n    </ng-container>\n  </ul>\n</div>\n`,\r\n  styles: [`.context-menu{position:absolute}::ng-deep .menu{background:#fff;border:1px solid #a7a7a7;box-shadow:0 0 10px 0 rgba(0,0,0,.5)}::ng-deep .menu .context-list{margin:0;padding:0}::ng-deep .menu .context-list .context-list-item{list-style:none;padding:5px 7px;min-width:200px;cursor:pointer}::ng-deep .menu .context-list .context-list-item .flex-container{display:flex}::ng-deep .menu .context-list .context-list-item .shortcut{font-size:.8em;opacity:.5;margin-left:10px;margin-top:2px}::ng-deep .menu .context-list .context-list-item .submenu{display:none;position:absolute;margin-top:-20px}::ng-deep .menu .context-list .context-list-item:hover{background:rgba(0,0,0,.1)}::ng-deep .menu .context-list .context-list-item:hover>.submenu{display:block}`]\r\n})\r\nexport class ContextMenuComponent implements OnInit, OnDestroy {\r\n  public open = false;\r\n  public contextState: ContextState;\r\n\r\n  private contextStateSub: Subscription;\r\n\r\n  constructor(public contexr: ContexrService) {\r\n    // Event capturing (not possible in real Angular yet)\r\n    document.addEventListener('contextmenu', (event) => {\r\n      event.preventDefault();\r\n      console.log('Reset context menu and prevent default');\r\n      this.contexr.reset();\r\n    }, true);\r\n  }\r\n\r\n  /**\r\n   * Close the context menu when we click somewhere else\r\n   */\r\n  @HostListener('document:click')\r\n  onDocumentClick(): void {\r\n    this.contexr.close();\r\n  }\r\n\r\n  /**\r\n   * Prevent a right click from the context menu to propagate further\r\n   * @param event\r\n   */\r\n  onContextMenu(event): void {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  /**\r\n   * Prevent a click from the context menu to propagate further\r\n   * @param event\r\n   */\r\n  onClick(event): void {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  /**\r\n   * Show context menu for our context or for all\r\n   * @param event\r\n   */\r\n  @HostListener('document:contextmenu', ['$event'])\r\n  onDocumentContextMenu(event): void {\r\n    console.log('Open context menu');\r\n    this.contexr.open(event);\r\n  }\r\n\r\n  /**\r\n   * Subscribe to the context menu state\r\n   */\r\n  public ngOnInit() {\r\n    this.contextStateSub = this.contexr.getContextState().subscribe((value) => {\r\n      this.contextState = value;\r\n      this.open = !!this.contextState.context;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Unsub from the context menu state\r\n   */\r\n  public ngOnDestroy(): void  {\r\n    this.contextStateSub.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Check if this is an action\r\n   * @param item\r\n   * @returns\r\n   */\r\n  public isAction(item: ContextMenuEntry): boolean {\r\n    return !!(item as ContextMenuItem).action;\r\n  }\r\n}\r\n","import {Component, ElementRef, Input, OnChanges} from '@angular/core';\nimport {ContextMenuItem} from '../../types/context-menu-item';\nimport {Submenu} from '../../types/submenu';\nimport {ContextMenuEntry} from '../../types/context-menu-entry';\n\n@Component({\n  selector: 'ctx-submenu',\n  template: `<li class=\"context-list-item\">\n  <div class=\"flex-container\">\n    <span class=\"context\">{{item.text}}</span>\n    <span style=\"flex: 1 1 auto;\"></span>\n    <span class=\"shortcut\">>>></span>\n  </div>\n  <ul class=\"context-list submenu menu\" [ngStyle]=\"subMenuStyle\">\n    <ng-container *ngFor=\"let subItem of item.children\">\n      <ctx-context-menu-item *ngIf=\"isAction(subItem)\" [item]=\"subItem\"></ctx-context-menu-item>\n      <ctx-submenu *ngIf=\"!isAction(subItem)\" [item]=\"subItem\"></ctx-submenu>\n    </ng-container>\n  </ul>\n</li>\n`,\n  styles: [``]\n})\nexport class SubmenuComponent implements OnChanges {\n\n  @Input() item: Submenu;\n\n  constructor(private element: ElementRef) { }\n\n  public subMenuStyle = {};\n\n  public ngOnChanges(): void {\n    const rect = this.element.nativeElement.getBoundingClientRect();\n    this.subMenuStyle = {\n      'left': 214 + 'px',\n      'top': rect.offsetHeight + 'px'\n    };\n  }\n\n  /**\n   * Check if this is an action\n   * @param item\n   * @returns\n   */\n  public isAction(item: ContextMenuEntry): boolean {\n    return !!(item as ContextMenuItem).action;\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {ContextMenuItem} from '../../types/context-menu-item';\r\nimport {ContexrService} from '../../providers/contexr.service';\r\n\r\n@Component({\r\n  selector: 'ctx-context-menu-item',\r\n  template: `<li (click)=\"act()\" class=\"context-list-item\">\r\n  <div class=\"flex-container\">\r\n    <span class=\"context\">{{item.text}}</span>\r\n    <span style=\"flex: 1 1 auto;\"></span>\r\n    <span class=\"shortcut\">{{item.hotkey}}</span>\r\n  </div>\r\n</li>\r\n`,\r\n  styles: [``]\r\n})\r\nexport class ContextMenuItemComponent implements OnInit {\r\n\r\n  @Input() item: ContextMenuItem;\r\n\r\n  constructor(private contexr: ContexrService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**\r\n   * Call an action and close the context menu\r\n   * @param context\r\n   */\r\n  public act(): void {\r\n    console.log(this.item);\r\n    this.item.action(this.item.args);\r\n    this.contexr.close();\r\n  }\r\n}\r\n","import {Directive, HostListener, Input} from '@angular/core';\r\nimport {ContexrService} from 'contexr/lib/providers/contexr.service';\r\n\r\n@Directive({\r\n  selector: '[ctx]'\r\n})\r\nexport class ContextDirective {\r\n  @Input('ctx') ctx: string;\r\n  @Input('ctxArgs') ctxArgs: any;\r\n\r\n  constructor(private contexr: ContexrService) {}\r\n\r\n  @HostListener('contextmenu', ['$event'])\r\n  public onContextMenu(event) {\r\n    console.log('Adding context: ' + this.ctx + ' with args: ' + this.ctxArgs);\r\n    this.contexr.addCurrentContext(this.ctx, this.ctxArgs);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {ContextMenuComponent} from './components/context-menu/context-menu.component';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ContexrService} from './providers/contexr.service';\r\nimport {HotkeyModule} from 'angular2-hotkeys';\r\nimport {SubmenuComponent} from './components/submenu/submenu.component';\r\nimport {ContextMenuItemComponent} from './components/context-menu-item/context-menu-item.component';\r\nimport { ContextDirective } from './directives/context.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HotkeyModule.forRoot()\r\n  ],\r\n  declarations: [\r\n    ContextMenuComponent,\r\n    SubmenuComponent,\r\n    ContextMenuItemComponent,\r\n    ContextDirective\r\n  ],\r\n  exports: [\r\n    ContextMenuComponent,\r\n    ContextDirective\r\n  ],\r\n  providers: [\r\n    ContexrService\r\n  ]\r\n})\r\nexport class ContexrModule {}\r\n"],"names":["ContexrService"],"mappings":"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"}
